tabPanel("Publications", fluidPage("Explore our publications.")),
tabPanel("Tools", fluidPage("Check out our tools.")),
tabPanel("Contact us", fluidPage("Get in touch with us."))
),
tags$head(
tags$style(HTML("
.nav-pills {
display: flex;
justify-content: center;
}
"))
)
)
# Define server
server <- function(input, output) {}
# Run the Shiny App
shinyApp(ui, server)
library(shiny)
library(imager)
ui <- fluidPage(
titlePanel("Interactive Image Viewer"),
sidebarLayout(
sidebarPanel(
sliderInput("z_slice", "Select Z Slice:", min = 1, max = 100, value = 50)
),
mainPanel(
plotOutput("image_plot")
)
)
)
server <- function(input, output) {
# Load your image data here
img <- read.image(system.file("extdata", "sample.png", package="imager"))
output$image_plot <- renderPlot({
# Display the selected Z slice
plot(img[, , input$z_slice])
})
}
shinyApp(ui, server)
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
install.packages("shinydashboard")
install.packages("shinydashboard")
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Interactive Image Viewer"),
dashboardSidebar(
sliderInput("z_slice", "Select Z Slice:", min = 1, max = 100, value = 50)
),
dashboardBody(
plotOutput("image_plot")
)
)
ui <- dashboardPage(
dashboardHeader(title = "Interactive Image Viewer"),
dashboardSidebar(
sliderInput("z_slice", "Select Z Slice:", min = 1, max = 100, value = 50)
),
dashboardBody(
plotOutput("image_plot")
)
)
library(plotly)
# Create a simple plot with a slider
fig <- plot_ly(
x = 1:100,
y = matrix(1:100, ncol = 100, byrow = TRUE),
type = 'scatter',
mode = 'lines'
)
# Add slider
fig <- fig %>% layout(updatemenus = list(
list(
active = 50,
type = 'buttons',
buttons = list(
list(label = 'Play',
method = 'animate',
args = list(
fromcurrent = TRUE,
frame = list(duration = 100, redraw = TRUE),
mode = 'immediate'
)
),
list(label = 'Pause',
method = 'animate',
args = list(
fromcurrent = TRUE,
frame = list(duration = 0, redraw = TRUE),
mode = 'immediate'
)
)
)
)
))
fig
setwd("Desktop")
setwd("Desktop")
getwd()
setwd("/Users/oktayismailkaplan/Desktop")
setwd("coding")
shiny::runApp("viewer.R")
shiny::runApp("viewer.R")
runApp('Untitled.R')
library(shinydashboard)
library(shiny)
library(shinydashboard)
# Define UI
ui <- shinydashboard::dashboardPage(
dashboardHeader(title = "The Kaplan Lab"),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Research", tabName = "research", icon = icon("flask")),
menuItem("Team", tabName = "team", icon = icon("users")),
menuItem("Publications", tabName = "publications", icon = icon("book")),
menuItem("Tools", tabName = "tools", icon = icon("cogs")),
menuItem("Contact us", tabName = "contact", icon = icon("envelope"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "home", fluidPage("Welcome to our website!")),
tabItem(tabName = "research", fluidPage("Explore our research.")),
tabItem(tabName = "team", fluidPage("Meet our team.")),
tabItem(tabName = "publications", fluidPage("Explore our publications.")),
tabItem(tabName = "tools", fluidPage("Check out our tools.")),
tabItem(tabName = "contact", fluidPage("Get in touch with us."))
),
tags$head(
tags$style(HTML("
.navbar {
display: flex;
justify-content: space-between;
}
.sidebar-menu {
width: 250px;
}
.main-sidebar {
background-color: #222d32;
}
.main-header .navbar {
background-color: #333;
}
"))
)
)
)
# Define server
server <- function(input, output) {}
# Run the Shiny App
shinyApp(ui, server)
getwd()
list.files()
getwd()
setwd("/Users/oktayismailkaplan/Desktop/Lab_page/")
library(shiny)
library(shinydashboard)
# Define UI
ui <- shinydashboard::dashboardPage(
dashboardHeader(title = "The Kaplan Lab"),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Research", tabName = "research", icon = icon("flask")),
menuItem("Team", tabName = "team", icon = icon("users")),
menuItem("Publications", tabName = "publications", icon = icon("book")),
menuItem("Tools", tabName = "tools", icon = icon("cogs")),
menuItem("Contact us", tabName = "contact", icon = icon("envelope"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "home", fluidPage("Welcome to our website!")),
tabItem(tabName = "research", fluidPage("Explore our research.")),
tabItem(tabName = "team",
fluidPage(
fluidRow(
column(6, img(src = "Oktay.jpeg", width = 400, height = 400)),
column(6, "Meet our team.")
)
)
),
tabItem(tabName = "publications", fluidPage("Explore our publications.")),
tabItem(tabName = "tools", fluidPage("Check out our tools.")),
tabItem(tabName = "contact", fluidPage("Get in touch with us."))
),
tags$head(
tags$style(HTML("
.navbar {
display: flex;
justify-content: space-between;
}
.sidebar-menu {
width: 250px;
}
.main-sidebar {
background-color: #222d32;
}
.main-header .navbar {
background-color: #333;
}
"))
)
)
)
# Define server
server <- function(input, output) {}
# Run the Shiny App
shinyApp(ui, server)
# Define UI
ui <- shinydashboard::dashboardPage(
dashboardHeader(title = "The Kaplan Lab"),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Research", tabName = "research", icon = icon("flask")),
menuItem("Team", tabName = "team", icon = icon("users")),
menuItem("Publications", tabName = "publications", icon = icon("book")),
menuItem("Tools", tabName = "tools", icon = icon("cogs")),
menuItem("Contact us", tabName = "contact", icon = icon("envelope"))
)
),
dashboardBody(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "styles.css")
),
tabItems(
tabItem(tabName = "home", fluidPage("Welcome to our website!")),
tabItem(tabName = "research", fluidPage("Explore our research.")),
tabItem(tabName = "team",
fluidPage(
fluidRow(
column(6, img(src = "Oktay.jpeg", class = "team-photo")),
column(6, "Meet our team.")
)
)
),
tabItem(tabName = "publications", fluidPage("Explore our publications.")),
tabItem(tabName = "tools", fluidPage("Check out our tools.")),
tabItem(tabName = "contact", fluidPage("Get in touch with us."))
),
tags$head(
tags$style(HTML("
.navbar {
display: flex;
justify-content: space-between;
}
.sidebar-menu {
width: 250px;
}
.main-sidebar {
background-color: #222d32;
}
.main-header .navbar {
background-color: #333;
}
"))
)
)
)
# Define server
server <- function(input, output) {}
# Run the Shiny App
shinyApp(ui, server)
# Define UI
ui <- shinydashboard::dashboardPage(
dashboardHeader(title = "The Kaplan Lab"),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Research", tabName = "research", icon = icon("flask")),
menuItem("Team", tabName = "team", icon = icon("users")),
menuItem("Publications", tabName = "publications", icon = icon("book")),
menuItem("Tools", tabName = "tools", icon = icon("cogs")),
menuItem("Contact us", tabName = "contact", icon = icon("envelope"))
)
),
dashboardBody(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "styles.css"),
tags$style(HTML("
.team-photo {
width: 400px;
height: 400px;
border-radius: 50%;
object-fit: cover;
}
"))
),
tabItems(
tabItem(tabName = "home", fluidPage("Welcome to our website!")),
tabItem(tabName = "research", fluidPage("Explore our research.")),
tabItem(tabName = "team",
fluidPage(
fluidRow(
column(6, img(src = "Oktay.jpeg", class = "team-photo")),
column(6, "Meet our team.")
)
)
),
tabItem(tabName = "publications", fluidPage("Explore our publications.")),
tabItem(tabName = "tools", fluidPage("Check out our tools.")),
tabItem(tabName = "contact", fluidPage("Get in touch with us."))
),
tags$head(
tags$style(HTML("
.navbar {
display: flex;
justify-content: space-between;
}
.sidebar-menu {
width: 250px;
}
.main-sidebar {
background-color: #222d32;
}
.main-header .navbar {
background-color: #333;
}
"))
)
)
)
# Define server
server <- function(input, output) {}
# Run the Shiny App
shinyApp(ui, server)
list.files()
runApp('lab.R')
list.files()
runApp('lab.R')
runApp('lab.R')
runApp('lab.R')
runApp('lab.R')
runApp('lab.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app1.R')
runApp('app1.R')
install.packages("shinyjs")
install.packages("shinyjs")
library(shiny); runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
getwd()
list.files()
runApp()
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
library("rsconnect")
rsconnect::setAccountInfo(name='raredisease',
token='BC37B677CD6CEAFCD687BA5DDD703159',
secret='<SECRET>')
rsconnect::setAccountInfo(name='raredisease',
token='BC37B677CD6CEAFCD687BA5DDD703159',
secret='jB55tESSg16JRatprF2xzaLSbmUVOctYF9xY0R01')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
